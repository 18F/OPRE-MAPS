# ---- Build Stage ----
# alpine
FROM oven/bun@sha256:4d375b7fb75445d389f4ecf3872a7876c7589f2f7322566f2785eccbcea3f256 as build

WORKDIR /home/bun/app

# Copy only the package files first to leverage Docker cache
COPY package.json bun.lockb ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy the rest of the application files
COPY . .

# Build the application
ARG MODE
ARG VITE_BACKEND_DOMAIN
COPY vite-env/env.${MODE}.local .env
RUN VITE_BACKEND_DOMAIN=${VITE_BACKEND_DOMAIN} NODE_ENV=${MODE} bun run build --mode ${MODE}

# ---- Release Stage ----
FROM oven/bun:1-alpine as release

RUN apk update && apk add --no-cache nginx=1.24.0-r7
COPY nginx.conf /etc/nginx/nginx.conf

WORKDIR /home/bun/app

# Copy built artifacts from the build stage
COPY --from=build /home/bun/app/index.js .
COPY --from=build /home/bun/app/build .
COPY --from=build /home/bun/app/.env.example .env

# Allow bun user to write runtime-config script to app dir
RUN chown -R bun:bun .

# Expose port
EXPOSE 3000/tcp

# Entry point to run the application.
ENTRYPOINT ["/bin/sh", "-c", "/usr/sbin/nginx -g 'daemon off;'"]
