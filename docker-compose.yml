version: "3.8"

services:

  db:
    image: "postgres:14.5"
    platform: linux/amd64
    container_name: ops-db
    security_opt:
      - no-new-privileges:true  # Resolve semgrep https://sg.run/0n8q
    environment:
      - POSTGRES_PASSWORD=local_password
    read_only: true  # Resolve semgrep https://sg.run/e4JE
    tmpfs: /var/run/postgresql/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migration:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: ops-migration
    command: >
      bash -c "
      python ./opre_ops/manage.py migrate &&
      python ./opre_ops/manage.py loaddata ./opre_ops/ops_site/fixtures/fake_data.json
      "

    volumes:
      # See below for an explanation of this volume. The same reasoning applies,
      # but in this case it's so we can run new migrations immediately without
      # having to rebuild the migration container.
      - ./backend/opre_ops:/home/app/opre_ops
    depends_on:
      db:
        condition: service_healthy

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: ops-backend
    ports:
      - 8080:8080
    depends_on:
      - migration
    volumes:
      - ./backend/opre_ops:/home/app/opre_ops

  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: ops-frontend
    ports:
      - 3000:3000
    depends_on:
      - backend
    volumes:
      - ./frontend/:/home/app
