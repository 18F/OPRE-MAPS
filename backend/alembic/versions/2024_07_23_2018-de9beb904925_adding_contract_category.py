"""Adding contract_category

Revision ID: de9beb904925
Revises: 151465a54d91
Create Date: 2024-07-23 20:18:53.102203+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'de9beb904925'
down_revision: Union[str, None] = '151465a54d91'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('RESEARCH', 'SERVICE', name='contractcategory').create(op.get_bind())
    op.add_column('contract_agreement', sa.Column('contract_category', postgresql.ENUM('RESEARCH', 'SERVICE', name='contractcategory', create_type=False), nullable=True))
    op.add_column('contract_agreement_version', sa.Column('contract_category', postgresql.ENUM('RESEARCH', 'SERVICE', name='contractcategory', create_type=False), autoincrement=False, nullable=True))
    op.create_unique_constraint(None, 'document', ['document_id'])
    op.alter_column('document_version', 'agreement_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=False)
    op.alter_column('document_version', 'document_id',
               existing_type=sa.VARCHAR(),
               nullable=True,
               autoincrement=False)
    op.alter_column('document_version', 'document_type',
               existing_type=postgresql.ENUM('CERTIFICATION_OF_FUNDING', 'STATEMENT_OF_REQUIREMENTS', 'ITAR_CHECKLIST_FOR_ALL_IT_PROCUREMENT_ACTIONS', 'INDEPENDENT_GOVERNMENT_COST_ESTIMATE', 'SECTION_508_EXCEPTION_DOCUMENTATION', 'COR_NOMINATION_AND_CERTIFICATION_DOCUMENT', 'ADDITIONAL_DOCUMENT', name='documenttype'),
               nullable=True,
               autoincrement=False)
    op.alter_column('document_version', 'file_name',
               existing_type=sa.VARCHAR(),
               nullable=True,
               autoincrement=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('document_version', 'file_name',
               existing_type=sa.VARCHAR(),
               nullable=False,
               autoincrement=False)
    op.alter_column('document_version', 'document_type',
               existing_type=postgresql.ENUM('CERTIFICATION_OF_FUNDING', 'STATEMENT_OF_REQUIREMENTS', 'ITAR_CHECKLIST_FOR_ALL_IT_PROCUREMENT_ACTIONS', 'INDEPENDENT_GOVERNMENT_COST_ESTIMATE', 'SECTION_508_EXCEPTION_DOCUMENTATION', 'COR_NOMINATION_AND_CERTIFICATION_DOCUMENT', 'ADDITIONAL_DOCUMENT', name='documenttype'),
               nullable=False,
               autoincrement=False)
    op.alter_column('document_version', 'document_id',
               existing_type=sa.VARCHAR(),
               nullable=False,
               autoincrement=False)
    op.alter_column('document_version', 'agreement_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=False)
    op.drop_constraint(None, 'document', type_='unique')
    op.drop_column('contract_agreement_version', 'contract_category')
    op.drop_column('contract_agreement', 'contract_category')
    sa.Enum('RESEARCH', 'SERVICE', name='contractcategory').drop(op.get_bind())
    # ### end Alembic commands ###
