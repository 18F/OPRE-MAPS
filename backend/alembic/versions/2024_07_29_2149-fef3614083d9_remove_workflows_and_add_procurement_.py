"""remove workflows and add procurement tracker

Revision ID: fef3614083d9
Revises: c98733f2a098
Create Date: 2024-07-29 21:49:32.306627+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "fef3614083d9"
down_revision: Union[str, None] = "4d898e1383a4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # drop constraints first
    op.drop_constraint(
        "procurement_step_workflow_step_id_fkey", "procurement_step", type_="foreignkey"
    )
    op.drop_constraint(
        "workflow_step_dependency_predecessor_step_id_fkey",
        "workflow_step_dependency",
        type_="foreignkey",
    )
    op.drop_constraint(
        "workflow_step_dependency_successor_step_id_fkey",
        "workflow_step_dependency",
        type_="foreignkey",
    )
    op.drop_constraint(
        "package_snapshot_package_id_fkey",
        "package_snapshot",
        type_="foreignkey",
    )
    op.drop_constraint(
        "workflow_step_instance_workflow_step_template_id_fkey",
        "workflow_step_instance",
        type_="foreignkey",
    )
    op.drop_constraint(
        "workflow_instance_workflow_template_id_fkey",
        "workflow_instance",
        type_="foreignkey",
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "procurement_tracker",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("agreement_id", sa.Integer(), nullable=True),
        sa.Column("current_step_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["agreement_id"],
            ["agreement.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["ops_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["current_step_id"],
            ["procurement_step.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["ops_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "procurement_tracker_version",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("agreement_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("current_step_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("created_on", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("updated_on", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    op.create_index(
        op.f("ix_procurement_tracker_version_end_transaction_id"),
        "procurement_tracker_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_procurement_tracker_version_operation_type"),
        "procurement_tracker_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_procurement_tracker_version_transaction_id"),
        "procurement_tracker_version",
        ["transaction_id"],
        unique=False,
    )
    op.drop_index("ix_package_version_end_transaction_id", table_name="package_version")
    op.drop_index("ix_package_version_operation_type", table_name="package_version")
    op.drop_index("ix_package_version_transaction_id", table_name="package_version")
    op.drop_table("package_version")
    op.drop_table("package")
    op.drop_index(
        "ix_workflow_step_template_version_end_transaction_id",
        table_name="workflow_step_template_version",
    )
    op.drop_index(
        "ix_workflow_step_template_version_operation_type",
        table_name="workflow_step_template_version",
    )
    op.drop_index(
        "ix_workflow_step_template_version_transaction_id",
        table_name="workflow_step_template_version",
    )
    op.drop_table("workflow_step_template_version")
    op.drop_table("package_snapshot")
    op.drop_table("step_approvers")
    op.drop_index(
        "ix_workflow_step_instance_version_end_transaction_id",
        table_name="workflow_step_instance_version",
    )
    op.drop_index(
        "ix_workflow_step_instance_version_operation_type",
        table_name="workflow_step_instance_version",
    )
    op.drop_index(
        "ix_workflow_step_instance_version_transaction_id",
        table_name="workflow_step_instance_version",
    )
    op.drop_table("workflow_step_instance_version")
    op.drop_index(
        "ix_workflow_template_version_end_transaction_id",
        table_name="workflow_template_version",
    )
    op.drop_index(
        "ix_workflow_template_version_operation_type",
        table_name="workflow_template_version",
    )
    op.drop_index(
        "ix_workflow_template_version_transaction_id",
        table_name="workflow_template_version",
    )
    op.drop_table("workflow_template_version")
    op.drop_table("workflow_step_dependency")
    op.drop_index(
        "ix_workflow_instance_version_end_transaction_id",
        table_name="workflow_instance_version",
    )
    op.drop_index(
        "ix_workflow_instance_version_operation_type",
        table_name="workflow_instance_version",
    )
    op.drop_index(
        "ix_workflow_instance_version_transaction_id",
        table_name="workflow_instance_version",
    )
    op.drop_table("workflow_instance_version")
    op.drop_table("workflow_step_template")
    op.drop_table("workflow_template")
    op.drop_table("workflow_step_instance")
    op.drop_index(
        "ix_workflow_step_dependency_version_end_transaction_id",
        table_name="workflow_step_dependency_version",
    )
    op.drop_index(
        "ix_workflow_step_dependency_version_operation_type",
        table_name="workflow_step_dependency_version",
    )
    op.drop_index(
        "ix_workflow_step_dependency_version_transaction_id",
        table_name="workflow_step_dependency_version",
    )
    op.drop_table("workflow_step_dependency_version")
    op.drop_index(
        "ix_package_snapshot_version_end_transaction_id",
        table_name="package_snapshot_version",
    )
    op.drop_index(
        "ix_package_snapshot_version_operation_type",
        table_name="package_snapshot_version",
    )
    op.drop_index(
        "ix_package_snapshot_version_transaction_id",
        table_name="package_snapshot_version",
    )
    op.drop_table("package_snapshot_version")
    op.drop_table("workflow_instance")
    op.drop_index(
        "ix_step_approvers_version_end_transaction_id",
        table_name="step_approvers_version",
    )
    op.drop_index(
        "ix_step_approvers_version_operation_type", table_name="step_approvers_version"
    )
    op.drop_index(
        "ix_step_approvers_version_transaction_id", table_name="step_approvers_version"
    )
    op.drop_table("step_approvers_version")
    op.add_column(
        "procurement_step",
        sa.Column("procurement_tracker_id", sa.Integer(), nullable=True),
    )
    # op.drop_constraint('procurement_step_workflow_step_id_fkey', 'procurement_step', type_='foreignkey')
    op.create_foreign_key(
        None,
        "procurement_step",
        "procurement_tracker",
        ["procurement_tracker_id"],
        ["id"],
    )
    op.drop_column("procurement_step", "workflow_step_id")
    op.add_column(
        "procurement_step_version",
        sa.Column(
            "procurement_tracker_id", sa.Integer(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("procurement_step_version", "workflow_step_id")
    sa.Enum(
        "REVIEW",
        "APPROVED",
        "REJECTED",
        "CHANGES",
        "COMPLETE",
        name="workflowstepstatus",
    ).drop(op.get_bind())
    sa.Enum(
        "APPROVAL",
        "DOCUMENT_MGMT",
        "VALIDATION",
        "PROCUREMENT",
        "ATTESTATION",
        name="workflowsteptype",
    ).drop(op.get_bind())
    sa.Enum(
        "DRAFT_TO_PLANNED",
        "PLANNED_TO_EXECUTING",
        "GENERIC",
        "PROCUREMENT_TRACKING",
        name="workflowaction",
    ).drop(op.get_bind())
    sa.Enum("CAN", "PROCUREMENT_SHOP", "AGREEMENT", name="workflowtriggertype").drop(
        op.get_bind()
    )
    op.sync_enum_values(
        "ops",
        "opseventtype",
        [
            "CREATE_BLI",
            "UPDATE_BLI",
            "DELETE_BLI",
            "SEND_BLI_FOR_APPROVAL",
            "CREATE_PROJECT",
            "CREATE_NEW_AGREEMENT",
            "UPDATE_AGREEMENT",
            "DELETE_AGREEMENT",
            "ACKNOWLEDGE_NOTIFICATION",
            "CREATE_BLI_PACKAGE",
            "UPDATE_BLI_PACKAGE",
            "CREATE_SERVICES_COMPONENT",
            "UPDATE_SERVICES_COMPONENT",
            "DELETE_SERVICES_COMPONENT",
            "CREATE_PROCUREMENT_ACQUISITION_PLANNING",
            "UPDATE_PROCUREMENT_ACQUISITION_PLANNING",
            "DELETE_PROCUREMENT_ACQUISITION_PLANNING",
            "CREATE_DOCUMENT",
            "LOGIN_ATTEMPT",
            "LOGOUT",
            "GET_USER_DETAILS",
            "CREATE_USER",
            "UPDATE_USER",
            "DEACTIVATE_USER",
        ],
        [
            TableReference(
                table_schema="ops", table_name="ops_event", column_name="event_type"
            ),
            TableReference(
                table_schema="ops",
                table_name="ops_event_version",
                column_name="event_type",
            ),
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        "ops",
        "opseventtype",
        [
            "LOGIN_ATTEMPT",
            "CREATE_BLI",
            "UPDATE_BLI",
            "DELETE_BLI",
            "CREATE_PROJECT",
            "CREATE_NEW_AGREEMENT",
            "UPDATE_AGREEMENT",
            "SEND_BLI_FOR_APPROVAL",
            "DELETE_AGREEMENT",
            "ACKNOWLEDGE_NOTIFICATION",
            "LOGOUT",
            "GET_USER_DETAILS",
            "CREATE_USER",
            "UPDATE_USER",
            "DEACTIVATE_USER",
            "CREATE_BLI_PACKAGE",
            "UPDATE_BLI_PACKAGE",
            "CREATE_SERVICES_COMPONENT",
            "UPDATE_SERVICES_COMPONENT",
            "DELETE_SERVICES_COMPONENT",
            "CREATE_PROCUREMENT_ACQUISITION_PLANNING",
            "UPDATE_PROCUREMENT_ACQUISITION_PLANNING",
            "DELETE_PROCUREMENT_ACQUISITION_PLANNING",
            "CREATE_DOCUMENT",
        ],
        [
            TableReference(
                table_schema="ops", table_name="ops_event", column_name="event_type"
            ),
            TableReference(
                table_schema="ops",
                table_name="ops_event_version",
                column_name="event_type",
            ),
        ],
        enum_values_to_rename=[],
    )
    sa.Enum("CAN", "PROCUREMENT_SHOP", "AGREEMENT", name="workflowtriggertype").create(
        op.get_bind()
    )
    sa.Enum(
        "DRAFT_TO_PLANNED",
        "PLANNED_TO_EXECUTING",
        "GENERIC",
        "PROCUREMENT_TRACKING",
        name="workflowaction",
    ).create(op.get_bind())
    sa.Enum(
        "APPROVAL",
        "DOCUMENT_MGMT",
        "VALIDATION",
        "PROCUREMENT",
        "ATTESTATION",
        name="workflowsteptype",
    ).create(op.get_bind())
    sa.Enum(
        "REVIEW",
        "APPROVED",
        "REJECTED",
        "CHANGES",
        "COMPLETE",
        name="workflowstepstatus",
    ).create(op.get_bind())
    op.add_column(
        "procurement_step_version",
        sa.Column("workflow_step_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_column("procurement_step_version", "procurement_tracker_id")
    op.add_column(
        "procurement_step",
        sa.Column("workflow_step_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "procurement_step", type_="foreignkey")
    op.create_foreign_key(
        "procurement_step_workflow_step_id_fkey",
        "procurement_step",
        "workflow_step_instance",
        ["workflow_step_id"],
        ["id"],
    )
    op.drop_column("procurement_step", "procurement_tracker_id")
    op.create_table(
        "step_approvers_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "workflow_step_template_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("role_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name="step_approvers_version_pkey"
        ),
    )
    op.create_index(
        "ix_step_approvers_version_transaction_id",
        "step_approvers_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_step_approvers_version_operation_type",
        "step_approvers_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_step_approvers_version_end_transaction_id",
        "step_approvers_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "workflow_instance",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('workflow_instance_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("associated_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "associated_type",
            postgresql.ENUM(
                "CAN",
                "PROCUREMENT_SHOP",
                "AGREEMENT",
                name="workflowtriggertype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "workflow_template_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "workflow_action",
            postgresql.ENUM(
                "DRAFT_TO_PLANNED",
                "PLANNED_TO_EXECUTING",
                "GENERIC",
                "PROCUREMENT_TRACKING",
                name="workflowaction",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "current_workflow_step_instance_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["ops_user.id"], name="workflow_instance_created_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["ops_user.id"], name="workflow_instance_updated_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["workflow_template_id"],
            ["workflow_template.id"],
            name="workflow_instance_workflow_template_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="workflow_instance_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "package_snapshot_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("package_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("version", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("object_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("object_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("bli_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name="package_snapshot_version_pkey"
        ),
    )
    op.create_index(
        "ix_package_snapshot_version_transaction_id",
        "package_snapshot_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_package_snapshot_version_operation_type",
        "package_snapshot_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_package_snapshot_version_end_transaction_id",
        "package_snapshot_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "workflow_step_dependency_version",
        sa.Column(
            "predecessor_step_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "successor_step_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "predecessor_step_id",
            "successor_step_id",
            "transaction_id",
            name="workflow_step_dependency_version_pkey",
        ),
    )
    op.create_index(
        "ix_workflow_step_dependency_version_transaction_id",
        "workflow_step_dependency_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_step_dependency_version_operation_type",
        "workflow_step_dependency_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_step_dependency_version_end_transaction_id",
        "workflow_step_dependency_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "workflow_step_instance",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('workflow_step_instance_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "workflow_instance_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "workflow_step_template_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "REVIEW",
                "APPROVED",
                "REJECTED",
                "CHANGES",
                "COMPLETE",
                name="workflowstepstatus",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "time_started", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "time_completed", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["ops_user.id"],
            name="workflow_step_instance_created_by_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["ops_user.id"],
            name="workflow_step_instance_updated_by_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["workflow_instance_id"],
            ["workflow_instance.id"],
            name="workflow_step_instance_workflow_instance_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["workflow_step_template_id"],
            ["workflow_step_template.id"],
            name="workflow_step_instance_workflow_step_template_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="workflow_step_instance_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "workflow_template",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('workflow_template_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["ops_user.id"], name="workflow_template_created_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["ops_user.id"], name="workflow_template_updated_by_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="workflow_template_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "workflow_step_template",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('workflow_step_template_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "workflow_template_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "workflow_type",
            postgresql.ENUM(
                "APPROVAL",
                "DOCUMENT_MGMT",
                "VALIDATION",
                "PROCUREMENT",
                "ATTESTATION",
                name="workflowsteptype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("index", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["ops_user.id"],
            name="workflow_step_template_created_by_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["ops_user.id"],
            name="workflow_step_template_updated_by_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["workflow_template_id"],
            ["workflow_template.id"],
            name="workflow_step_template_workflow_template_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="workflow_step_template_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "workflow_instance_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("associated_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "associated_type",
            postgresql.ENUM(
                "CAN",
                "PROCUREMENT_SHOP",
                "AGREEMENT",
                name="workflowtriggertype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "workflow_template_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "workflow_action",
            postgresql.ENUM(
                "DRAFT_TO_PLANNED",
                "PLANNED_TO_EXECUTING",
                "GENERIC",
                "PROCUREMENT_TRACKING",
                name="workflowaction",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "current_workflow_step_instance_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name="workflow_instance_version_pkey"
        ),
    )
    op.create_index(
        "ix_workflow_instance_version_transaction_id",
        "workflow_instance_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_instance_version_operation_type",
        "workflow_instance_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_instance_version_end_transaction_id",
        "workflow_instance_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "workflow_step_dependency",
        sa.Column(
            "predecessor_step_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "successor_step_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["ops_user.id"],
            name="workflow_step_dependency_created_by_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["predecessor_step_id"],
            ["workflow_step_instance.id"],
            name="workflow_step_dependency_predecessor_step_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["successor_step_id"],
            ["workflow_step_instance.id"],
            name="workflow_step_dependency_successor_step_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["ops_user.id"],
            name="workflow_step_dependency_updated_by_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "predecessor_step_id",
            "successor_step_id",
            name="workflow_step_dependency_pkey",
        ),
    )
    op.create_table(
        "workflow_template_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name="workflow_template_version_pkey"
        ),
    )
    op.create_index(
        "ix_workflow_template_version_transaction_id",
        "workflow_template_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_template_version_operation_type",
        "workflow_template_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_template_version_end_transaction_id",
        "workflow_template_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "workflow_step_instance_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "workflow_instance_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "workflow_step_template_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "REVIEW",
                "APPROVED",
                "REJECTED",
                "CHANGES",
                "COMPLETE",
                name="workflowstepstatus",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "time_started", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "time_completed", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name="workflow_step_instance_version_pkey"
        ),
    )
    op.create_index(
        "ix_workflow_step_instance_version_transaction_id",
        "workflow_step_instance_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_step_instance_version_operation_type",
        "workflow_step_instance_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_step_instance_version_end_transaction_id",
        "workflow_step_instance_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "step_approvers",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "workflow_step_template_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("role_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["ops_user.id"], name="step_approvers_created_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["group_id"], ["group.id"], name="step_approvers_group_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["role.id"], name="step_approvers_role_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["ops_user.id"], name="step_approvers_updated_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["ops_user.id"], name="step_approvers_user_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["workflow_step_template_id"],
            ["workflow_step_template.id"],
            name="step_approvers_workflow_step_template_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="step_approvers_pkey"),
    )
    op.create_table(
        "package_snapshot",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("package_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("version", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("object_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("object_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("bli_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["bli_id"],
            ["budget_line_item.id"],
            name="package_snapshot_bli_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["ops_user.id"], name="package_snapshot_created_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["package_id"], ["package.id"], name="package_snapshot_package_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["ops_user.id"], name="package_snapshot_updated_by_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="package_snapshot_pkey"),
    )
    op.create_table(
        "workflow_step_template_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "workflow_template_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "workflow_type",
            postgresql.ENUM(
                "APPROVAL",
                "DOCUMENT_MGMT",
                "VALIDATION",
                "PROCUREMENT",
                "ATTESTATION",
                name="workflowsteptype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("index", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name="workflow_step_template_version_pkey"
        ),
    )
    op.create_index(
        "ix_workflow_step_template_version_transaction_id",
        "workflow_step_template_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_step_template_version_operation_type",
        "workflow_step_template_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_workflow_step_template_version_end_transaction_id",
        "workflow_step_template_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_table(
        "package",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("submitter_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "workflow_instance_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["created_by"], ["ops_user.id"], name="package_created_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["submitter_id"], ["ops_user.id"], name="package_submitter_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"], ["ops_user.id"], name="package_updated_by_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["workflow_instance_id"],
            ["workflow_instance.id"],
            name="package_workflow_instance_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="package_pkey"),
    )
    op.create_table(
        "package_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("submitter_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "workflow_instance_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("notes", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_on", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id", name="package_version_pkey"),
    )
    op.create_index(
        "ix_package_version_transaction_id",
        "package_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        "ix_package_version_operation_type",
        "package_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        "ix_package_version_end_transaction_id",
        "package_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.drop_index(
        op.f("ix_procurement_tracker_version_transaction_id"),
        table_name="procurement_tracker_version",
    )
    op.drop_index(
        op.f("ix_procurement_tracker_version_operation_type"),
        table_name="procurement_tracker_version",
    )
    op.drop_index(
        op.f("ix_procurement_tracker_version_end_transaction_id"),
        table_name="procurement_tracker_version",
    )
    op.drop_table("procurement_tracker_version")
    op.drop_table("procurement_tracker")
    # ### end Alembic commands ###
