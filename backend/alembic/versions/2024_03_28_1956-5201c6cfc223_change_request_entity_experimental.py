"""Change Request entity - experimental

Revision ID: 5201c6cfc223
Revises: 95e0429b780a
Create Date: 2024-03-28 19:56:55.650252+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5201c6cfc223'
down_revision: Union[str, None] = '95e0429b780a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('change_request_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('type', sa.String(), autoincrement=False, nullable=True),
    sa.Column('requested_changes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('requested_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('approved_by_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('approved_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('agreement_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('budget_line_item_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_change_request_version_end_transaction_id'), 'change_request_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_change_request_version_operation_type'), 'change_request_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_change_request_version_transaction_id'), 'change_request_version', ['transaction_id'], unique=False)
    op.create_table('change_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('requested_changes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('requested_by_id', sa.Integer(), nullable=True),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('approved_on', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('agreement_id', sa.Integer(), nullable=True),
    sa.Column('budget_line_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agreement_id'], ['agreement.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['approved_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['budget_line_item_id'], ['budget_line_item.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['requested_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('change_request')
    op.drop_index(op.f('ix_change_request_version_transaction_id'), table_name='change_request_version')
    op.drop_index(op.f('ix_change_request_version_operation_type'), table_name='change_request_version')
    op.drop_index(op.f('ix_change_request_version_end_transaction_id'), table_name='change_request_version')
    op.drop_table('change_request_version')
    # ### end Alembic commands ###
