"""Adding CANtype and division id to CAN

Revision ID: cfdfddab1d80
Revises: 0cdc149783cd
Create Date: 2024-06-24 20:53:29.277219+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cfdfddab1d80'
down_revision: Union[str, None] = '0cdc149783cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('OPRE', 'NON_OPRE', name='cantype').create(op.get_bind())
    op.add_column('can', sa.Column('can_type', postgresql.ENUM('OPRE', 'NON_OPRE', name='cantype', create_type=False), nullable=True))
    op.add_column('can', sa.Column('division_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'can', 'division', ['division_id'], ['id'])
    op.add_column('can_version', sa.Column('can_type', postgresql.ENUM('OPRE', 'NON_OPRE', name='cantype', create_type=False), autoincrement=False, nullable=True))
    op.add_column('can_version', sa.Column('division_id', sa.Integer(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('can_version', 'division_id')
    op.drop_column('can_version', 'can_type')
    op.drop_constraint(None, 'can', type_='foreignkey')
    op.drop_column('can', 'division_id')
    op.drop_column('can', 'can_type')
    sa.Enum('OPRE', 'NON_OPRE', name='cantype').drop(op.get_bind())
    # ### end Alembic commands ###
