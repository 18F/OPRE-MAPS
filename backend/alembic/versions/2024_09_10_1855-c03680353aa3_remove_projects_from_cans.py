"""remove Projects from CANs

Revision ID: c03680353aa3
Revises: eb4261420779
Create Date: 2024-09-10 18:55:28.262603+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c03680353aa3'
down_revision: Union[str, None] = 'eb4261420779'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_project_cans_version_end_transaction_id', table_name='project_cans_version')
    op.drop_index('ix_project_cans_version_operation_type', table_name='project_cans_version')
    op.drop_index('ix_project_cans_version_transaction_id', table_name='project_cans_version')
    op.drop_table('project_cans_version')
    op.drop_table('project_cans')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_cans',
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('can_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['can_id'], ['can.id'], name='project_cans_can_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['ops_user.id'], name='project_cans_created_by_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='project_cans_project_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['ops_user.id'], name='project_cans_updated_by_fkey'),
    sa.PrimaryKeyConstraint('project_id', 'can_id', name='project_cans_pkey')
    )
    op.create_table('project_cans_version',
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('can_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('operation_type', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('project_id', 'can_id', 'transaction_id', name='project_cans_version_pkey')
    )
    op.create_index('ix_project_cans_version_transaction_id', 'project_cans_version', ['transaction_id'], unique=False)
    op.create_index('ix_project_cans_version_operation_type', 'project_cans_version', ['operation_type'], unique=False)
    op.create_index('ix_project_cans_version_end_transaction_id', 'project_cans_version', ['end_transaction_id'], unique=False)
    # ### end Alembic commands ###
