sequenceDiagram
    autonumber
    participant User
    participant Web as OPS Web
    participant API as OPS API
    participant DB as OPS DB

    User->>+Web: Requests Approval
    Web->>+API: Requests POST `/approve`
    API->> API: Create `Package`
    API->> API: Create `Worfklow-Instance`
    API->> API: Create `Workflow-Step-Instance`
    API->> API: Create `Package-Snapshot`
    API->> API: Create `Notification` [todo]
    API->>+ DB: Commit `Package`
    DB ->>- API: Response
    API->>+ DB: Commit `Workflow-Instance`
    DB ->>- API: Response
    API ->>+ DB: Commit `Notification`
    DB ->>- API: Response
    API->>-Web: Response
    Web->>-User: Response


    User->>+Web: Clicks "Review" Notification
    User->>+Web: Navigate to the `Approve` page
    Web->>+API: Requests GET `/approve/?agreement_id:id&step_id:id`
    API->> API: [Get data needed to render /approve page]
    API->>-Web: Response
    Web->>-User: Response
    User->>+Web: Clicks "Approve" button
    Web->>+API: Requests POST `/workflow-cmd` <br/>payload { <br/> action: "approve", <br/> workflow_step_instance_id: id, <br/> notes: "some notes" <br/> }
    API->>+ API: [Update `Workflow-Step-Instance`] [todo]
    API->>+DB: Update `Workflow-Step-Instance`
    DB ->>- API: Response
    API->>+API: [Listener: `Workflow-Step-Instance` updated] [todo]
    API->> API: [Update "Workflow"] [todo]
    API->> API: [Check what should happen next] [todo]
    API->> API: [If: end of workflow: Update Package Entities] [todo]
    API->> API: [Create `Notification`] [todo]
    API->>-Web: Response (not fail)
    Web->>-User: Response (not fail)
