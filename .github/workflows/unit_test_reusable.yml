on:
  workflow_call:

jobs:
  backend-api:
    name: Backend API Unit Tests
    runs-on: ubuntu-latest
    env:
      JWT_PRIVATE_KEY: "__blank__"
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      - uses: ./.github/actions/setup-python
      # Stand up the system stack, to have something to poke
      - name: Run backend unit tests
        working-directory: ./backend/ops_api/
        run: pipenv run pytest

  backend-data-tools:
    name: Data-Tools Unit Tests
    runs-on: ubuntu-latest
    env:
      JWT_PRIVATE_KEY: "__blank__"
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      - uses: ./.github/actions/setup-python
      - name: Run backend unit tests
        working-directory: ./backend/data_tools/
        run: pipenv install --dev && pipenv run pytest

  frontend:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      - uses: ./.github/actions/setup-javascript
      # Stand up the system stack, to have something to poke
      - name: Run frontend unit tests
        working-directory: ./frontend
        run: yarn test

  e2e:
    name: End-to-End Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - uses: ./.github/actions/setup-javascript

      ## DEBUGGING
      - name: Check if secrets.JWT_PRIVATE_KEY is set
        run: |
          if [[ -z "${{ secrets.JWT_PRIVATE_KEY }}" ]]; then
            echo "secrets.JWT_PRIVATE_KEY is empty or not set!"
            exit 1
          else
            echo "secrets.JWT_PRIVATE_KEY is set."
          fi


      # Stand up the system stack, to have something to poke
      - name: Launch Stack
        # env:
        #   JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
        uses: ./.github/actions/run-full-stack
        env:
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}

      # Run the Cypress E2E Tests
      - name: E2E Test
        working-directory: frontend
        run: yarn test:e2e --spec ./cypress/e2e/loginPage.cy.js

      - name: Capture logs
        shell: bash
        if: always()
        run: | # Capture logs from all services
          docker compose -f docker-compose.yml logs --no-color > full-stack-logs.log

      - name: Upload logs as artifact
        if: always() # Ensure this runs, even if E2E fails
        uses: actions/upload-artifact@v2
        with:
          # Set the path to the log file
          path: full-stack-logs.log
          # Optionally, set a name for the artifact
          name: full-stack-logs
