name: Semgrep
on:
  workflow_call:

jobs:
  codeql:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  semgrep:
    permissions:
      security-events: write
    name: Semgrep Analyze
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Semgrep Scan
        run: |
          echo "SEMGREP_TO_UPLOAD=semgrep.sarif" >> $GITHUB_ENV
          semgrep scan --sarif --output=semgrep.sarif --error
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          SEMGREP_RULES: "p/default"

        # There's a bug in semgrep that even if there are ignored findings, there will still be a SARIF file created that has the findings.
        # So, if we get to this step, the previous scan step succeeded, and we actually don't have any findings.
        # Delete the findings in the SARIF file.
      - name: Install jq
        run: |
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -O /usr/local/bin/jq
          chmod +x /usr/local/bin/jq

      - name: SARIF clean-up
        run: |
          cat ./semgrep.sarif | jq 'del(.runs[].results[])' > semgrep_clean.sarif
          echo "SEMGREP_TO_UPLOAD=semgrep_clean.sarif" >> $GITHUB_ENV

      - name: Upload SARIF file for GitHub Advanced Security Dashboard
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.SEMGREP_TO_UPLOAD }}
        if: always()
