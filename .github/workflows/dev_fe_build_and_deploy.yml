name: Frontend Bump Build and Dev Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'frontend/**'

env:
  WORKING_DIR: "frontend"
  DOCKER_FILE: "Dockerfile.azure"
  DOMAIN_NAME: "ops.opre.acf.gov"
  # Map environments to their respective modes
  ENV_MODE_MAP: |
    prod=production
    stg=production
    dev=development
  # JSON string representing the environments for build
  BUILD_ENVIRONMENTS: '["dev", "stg", "prod"]'
  # JSON string representing the environments to deploy to
  DEPLOY_ENVIRONMENTS: '["dev", "stg"]'

jobs:
  version-bump:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: 'Automated Version Bump'
        id: version_bump
        uses: 'phips28/gh-action-bump-version@56588a3c4a1d62a068f308dfbc17f4ee55c69d41' # v11.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix: 'ops-frontend-v'
          PACKAGEJSON_DIR: 'frontend'

      - name: Extract Version
        id: extract_version
        run: |
          VERSION=$(echo "${{ steps.version_bump.outputs.newTag }}" | sed -e 's/.*v\(.*\)/v\1/')
          echo "::set-output name=version::$VERSION"

  build-and-push-image:
    needs: version-bump
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        # Use fromJSON to convert the environment variable into a matrix
        environment: ${{ fromJSON(env.BUILD_ENVIRONMENTS) }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Parse environment mode from map
        id: set_mode
        run: |
          # Extract the mode for the current environment from the map
          MODE=$(echo "${{ env.ENV_MODE_MAP }}" | grep "^${{ matrix.environment }}=" | cut -d'=' -f2)
          if [[ -z "$MODE" ]]; then
            echo "No mode found for environment ${{ matrix.environment }}. Defaulting to ${{ matrix.environment }}."
            MODE=${{ matrix.environment }}
          fi
          echo "MODE=$MODE" >> $GITHUB_ENV

      - name: Build and publish the Docker image for ${{ github.repository }}
        uses: ./.github/actions/build-and-push
        with:
          image_name: ${{ github.repository }}/ops-${{ env.WORKING_DIR }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          context: ${{ github.workspace }}/${{ env.WORKING_DIR }}
          dockerfile: ${{ github.workspace }}/${{ env.WORKING_DIR }}/${{ env.DOCKER_FILE }}
          image_tags: "unstable,${{ github.sha }},${{ matrix.environment }},${{ matrix.environment }}-${{ needs.version-bump.outputs.version }}"
          build_args: "VITE_BACKEND_DOMAIN=https://${{ matrix.environment }}.${{ env.DOMAIN_NAME }}, MODE=${{ env.MODE }}"

  deploy-dev-frontend:
    needs: [version-bump, build-and-push-image]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Use fromJSON to define which environments to deploy to
        environment: ${{ fromJSON(env.DEPLOY_ENVIRONMENTS) }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Log in to Azure
        uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
        with:
          creds: ${{ secrets.SDLC_AZURE_CREDS }}

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@5f5f4c56ca90376e3cfbd76ba8fe8533c784e655 # v2
        with:
          containerAppName: opre-ops-${{ matrix.environment }}-app-${{ env.WORKING_DIR }}
          resourceGroup: opre-ops-${{ matrix.environment }}-rg
          imageToDeploy: ghcr.io/hhs/opre-ops/ops-${{ env.WORKING_DIR }}:${{ matrix.environment }}-${{ needs.version-bump.outputs.version }}
