name: 'Terraform setup and plan'
description: 'Setup Terraform and creates plan'
inputs:
  terraform_directory:
    description: 'Directory that holds Terraform code'
    required: true
  azure_client_id: 
    description: 'Azure client id'
    required: true
  azure_client_secret: 
    description: 'Azure client secret'
    required: true
  azure_subscription_id:
    description: 'Azure subscription id'
    required: true
  azure_tenant_id:
    description: 'Azure tenant id'
    required: true
  terraform_version: 
    description: 'Terraform Version'
    required: true
    default: 1.5.7
  github_token: 
    description: 'GitHub token for auth'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: true
  tf_vars: 
    description: 'A map of variable inputs for Terraform'
    required: false

runs:
  using: "composite"
  steps:
    - name: Set Terraform Variables
      run: |
        if [[ -n "${INPUT_TF_VARS}" ]]; then
          for key in $(echo "${INPUT_TF_VARS}" | jq -r 'keys[]'); do
            value=$(echo "${INPUT_TF_VARS}" | jq -r ".$key")

            echo "TF_VAR_${key// /}=${value}" >> $GITHUB_ENV

            # Print debug statement
            echo "Exported TF_VAR_${key// /}=${value}"
          done
        fi
      shell: bash
      env:
        INPUT_TF_VARS: ${{ inputs.tf_vars }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false
    
    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.azure_client_id }}
        ARM_CLIENT_SECRET: ${{ inputs.azure_client_secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.azure_subscription_id }}
        ARM_TENANT_ID: ${{ inputs.azure_tenant_id }}
      run: |
        echo "TF_COMMIT_HASH: $TF_VAR_commit_hash"
        terraform init

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.azure_client_id }}
        ARM_CLIENT_SECRET: ${{ inputs.azure_client_secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.azure_subscription_id }}
        ARM_TENANT_ID: ${{ inputs.azure_tenant_id }}
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.pr_id }}-tf-plan
        path: ${{ inputs.terraform_directory }}/tfplan

    - name: Comment Plan
      id: comment-plan
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_id }}
        body: |
          Terraform Plan:

          ```
          ${{ steps.plan.outputs.plan }}
          ```

          Plan saved to GH artifacts.
