name: 'Terraform setup and plan'
description: 'Setup Terraform and creates plan'
inputs:
  terraform_directory:
    description: 'Directory that holds Terraform code'
    required: true
  azure_client_id:
    description: 'Azure client id'
    required: true
  azure_client_secret:
    description: 'Azure client secret'
    required: true
  azure_subscription_id:
    description: 'Azure subscription id'
    required: true
  azure_tenant_id:
    description: 'Azure tenant id'
    required: true
  terraform_version:
    description: 'Terraform Version'
    required: true
    default: 1.6.6
  github_token:
    description: 'GitHub token for auth'
    required: true
  pr_id:
    description: 'Pull request ID'
    required: true
  tf_vars:
    description: 'A map of variable inputs for Terraform'
    required: false

runs:
  using: "composite"
  steps:
    - name: Get last directory name
      id: get-tf-dir
      run: |
        tf_dir=$(echo ${{ inputs.terraform_directory }} | rev | cut -d'/' -f1 | rev)
        echo "tf_dir=$tf_dir" >> $GITHUB_OUTPUT
      shell: bash

    - name: Set Terraform Variables
      run: |
        if [[ -n "${INPUT_TF_VARS}" ]]; then
          for key in $(echo "${INPUT_TF_VARS}" | jq -r 'keys[]'); do
            value=$(echo "${INPUT_TF_VARS}" | jq -r ".$key")

            echo "TF_VAR_${key// /}=${value}" >> $GITHUB_ENV

            # Print debug statement
            echo "Exported TF_VAR_${key// /}=${value}"
          done
        fi
      shell: bash
      env:
        INPUT_TF_VARS: ${{ inputs.tf_vars }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 #v3.0.0
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.azure_client_id }}
        ARM_CLIENT_SECRET: ${{ inputs.azure_client_secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.azure_subscription_id }}
        ARM_TENANT_ID: ${{ inputs.azure_tenant_id }}
      run: |
        terraform init

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.azure_client_id }}
        ARM_CLIENT_SECRET: ${{ inputs.azure_client_secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.azure_subscription_id }}
        ARM_TENANT_ID: ${{ inputs.azure_tenant_id }}
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4.1.0
      with:
        name: ${{ inputs.pr_id }}-${{ steps.get-tf-dir.outputs.tf_dir }}-tf-plan
        path: ${{ inputs.terraform_directory }}/tfplan

    - name: Comment Plan
      id: comment-plan
      uses: peter-evans/create-or-update-comment@23ff15729ef2fc348714a3bb66d2f655ca9066f2 #v3.1.0
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_id }}
        body: |
          Terraform Plan for ${{ inputs.terraform_directory }}:

          ```
          ${{ steps.plan.outputs.plan }}
          ```

          Plan saved to GH artifacts.
