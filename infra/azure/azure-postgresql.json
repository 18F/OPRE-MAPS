{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The administrator username of the server."
            },
            "minLength": 1,
            "maxLength": 128,
            "defaultValue": "sqladmin"
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password of the server."
            },
            "minLength": 8,
            "maxLength": 128,
            "defaultValue": "Password1234!"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "serverName": {
            "type": "string",
            "metadata": {
                "description": "The name of the server."
            },
            "defaultValue": "ops-db"
        },
        "serverEdition": {
            "type": "string",
            "defaultValue": "Burstable"
        },
        "storageSizeGB": {
            "type": "int",
            "defaultValue": 32
        },
        "haEnabled": {
            "defaultValue": "Disabled",
            "type": "string"
        },
        "availabilityZone": {
            "defaultValue": "",
            "type": "string"
        },
        "standbyAvailabilityZone": {
            "defaultValue": "",
            "type": "string"
        },
        "version": {
            "type": "string",
            "defaultValue": "14.0"
        },
        "tags": {
            "defaultValue": {},
            "type": "object"
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "vmName": {
            "defaultValue": "Standard_D4s_v3",
            "type": "string"
        },
        "vnetData": {
            "defaultValue": {
                "virtualNetworkName": "testVnet",
                "virtualNetworkId": "testVnetId",
                "subnetName": "testSubnet",
                "subnetList": [
                    {
                        "subnetName": "testSubnet",
                        "subnetNeedsUpdate": false,
                        "subnetProperties": {}
                    }
                ],
                "virtualNetworkAddressPrefix": "10.0.0.0/16",
                "virtualNetworkResourceGroupName": "[resourceGroup().name]",
                "location": "eastus2",
                "subscriptionId": "[subscription().subscriptionId]",
                "subnetProperties": {},
                "isNewVnet": false,
                "subnetNeedsUpdate": false,
                "usePrivateDnsZone": false,
                "isNewPrivateDnsZone": false,
                "privateDnsSubscriptionId": "[subscription().subscriptionId]",
                "privateDnsResourceGroup": "[resourceGroup().name]",
                "privateDnsZoneName": "testPrivateDnsZone",
                "linkVirtualNetwork": false,
                "Network": {}
            },
            "type": "object",
            "metadata": {
                "description": "Vnet data is an object which contains all parameters pertaining to vnet and subnet"
            }
        },
        "virtualNetworkDeploymentName": {
            "type": "string",
            "defaultValue": "vnetDeployment"
        },
        "virtualNetworkLinkDeploymentName": {
            "type": "string",
            "defaultValue": "vnetLinkDeployment"
        },
        "privateDnsZoneDeploymentName": {
            "type": "string",
            "defaultValue": "privateDnsZoneDeployment"
        },
        "identityData": {
            "defaultValue": {},
            "type": "object"
        },
        "dataEncryptionData": {
            "defaultValue": {},
            "type": "object"
        },
        "apiVersion": {
            "defaultValue": "2022-12-01",
            "type": "string"
        },
        "aadEnabled": {
            "defaultValue": false,
            "type": "bool"
        },
        "aadData": {
            "defaultValue": {},
            "type": "object"
        },
        "authConfig": {
            "defaultValue": {},
            "type": "object"
        },
        "iopsTier": {
            "defaultValue": "",
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[parameters('privateDnsZoneDeploymentName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[parameters('vnetData').privateDnsZoneName]",
                            "location": "global",
                            "tags": {},
                            "properties": {}
                        }
                    ]
                }
            },
            "subscriptionId": "[parameters('vnetData').privateDnsSubscriptionId]",
            "resourceGroup": "[parameters('vnetData').privateDnsResourceGroup]",
            "condition": "[and(parameters('vnetData').usePrivateDnsZone, parameters('vnetData').isNewPrivateDnsZone)]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[parameters('virtualNetworkDeploymentName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "condition": "[parameters('vnetData').subnetNeedsUpdate]",
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "name": "[concat(parameters('vnetData').virtualNetworkName, '/', parameters('vnetData').subnetName)]",
                            "apiVersion": "2020-05-01",
                            "properties": "[parameters('vnetData').subnetProperties]"
                        },
                        {
                            "condition": "[parameters('vnetData').isNewVnet]",
                            "type": "Microsoft.Network/virtualNetworks",
                            "name": "[parameters('vnetData').virtualNetworkName]",
                            "apiVersion": "2020-05-01",
                            "location": "[parameters('vnetData').location]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetData').virtualNetworkAddressPrefix]"
                                    ]
                                },
                                "copy": [
                                    {
                                        "name": "subnets",
                                        "count": "[length(parameters('vnetData').subnetList)]",
                                        "input": {
                                            "name": "[parameters('vnetData').subnetList[copyIndex('subnets')].subnetName]",
                                            "properties": "[parameters('vnetData').subnetList[copyIndex('subnets')].subnetProperties]"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "subscriptionId": "[parameters('vnetData').subscriptionId]",
            "resourceGroup": "[parameters('vnetData').virtualNetworkResourceGroupName]",
            "condition": "[or(parameters('vnetData').isNewVnet, parameters('vnetData').subnetNeedsUpdate)]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "[parameters('virtualNetworkLinkDeploymentName')]",
            "dependsOn": [
                "[parameters('privateDnsZoneDeploymentName')]",
                "[parameters('virtualNetworkDeploymentName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2020-06-01",
                            "name": "[concat(parameters('vnetData').privateDnsZoneName, '/', uniquestring(parameters('vnetData').virtualNetworkId))]",
                            "location": "global",
                            "properties": {
                                "virtualNetwork": {
                                    "id": "[parameters('vnetData').virtualNetworkId]"
                                },
                                "registrationEnabled": false
                            }
                        }
                    ]
                }
            },
            "subscriptionId": "[parameters('vnetData').privateDnsSubscriptionId]",
            "resourceGroup": "[parameters('vnetData').privateDnsResourceGroup]",
            "condition": "[and(parameters('vnetData').usePrivateDnsZone, parameters('vnetData').linkVirtualNetwork)]"
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "[parameters('apiVersion')]",
            "name": "[parameters('serverName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('virtualNetworkLinkDeploymentName')]"
            ],
            "tags": "[parameters('tags')]",
            "sku": {
                "name": "[parameters('vmName')]",
                "tier": "[parameters('serverEdition')]"
            },
            "identity": "[if(empty(parameters('identityData')), json('null'), parameters('identityData'))]",
            "properties": {
                "createMode": "Default",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "availabilityZone": "[parameters('availabilityZone')]",
                "Backup": {
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                },
                "highAvailability": {
                    "mode": "[parameters('haEnabled')]",
                    "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
                },
                "dataencryption": "[if(empty(parameters('dataEncryptionData')), json('null'), parameters('dataEncryptionData'))]",
                "Network": "[if(empty(parameters('vnetData').Network), json('null'), parameters('vnetData').Network)]",
                "Storage": {
                    "StorageSizeGB": "[parameters('storageSizeGB')]",
                    "iopsTier": "[parameters('iopsTier')]"
                },
                "version": "[parameters('version')]",
                "authConfig": "[if(empty(parameters('authConfig')), json('null'), parameters('authConfig'))]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "addAdmins",
            "dependsOn": [
                "[concat('Microsoft.DBforPostgreSQL/flexibleServers/', parameters('serverName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
                            "name": "[concat(parameters('serverName'),'/', parameters('aadData').objectId)]",
                            "apiVersion": "[parameters('apiVersion')]",
                            "properties": {
                                "tenantId": "[parameters('aadData').tenantId]",
                                "principalName": "[parameters('aadData').principalName]",
                                "principalType": "[parameters('aadData').principalType]"
                            }
                        }
                    ]
                }
            },
            "condition": "[parameters('aadEnabled')]"
        }
    ]
}
